<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="-3.0"/>
  <arg name="y_pos" default="1.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="map_file" default="$(find isar_turtlebot)/maps/house.yaml"/>
  <arg name="open_navigation_rviz" default="true"/>
  <arg name="open_manipulator_rviz" default="false"/>
  <arg name="open_manipulator_gui" default="true"/>

  <arg name="move_forward_only" default="false"/>

  <rosparam file="$(find turtlebot3_manipulation_gazebo)/config/gazebo_controller.yaml" command="load"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find isar_turtlebot)/worlds/house.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- send robot urdf to param server -->
  <include file="$(find turtlebot3_manipulation_description)/launch/turtlebot3_manipulation_upload.launch">
    <arg name="model" value="$(arg model)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -param robot_description -model robot -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y 0.0 -J joint1 0.0 -J joint2 0.0 -J joint3 0.0 -J joint4 0.0 -J gripper 0.0 -J gripper_sub 0.0"/>


  <!-- manipulator controller utils -->
  <include file="$(find turtlebot3_manipulation_gazebo)/launch/controller_utils.launch"/>

  <!-- run manipulator controllers -->
  <include file="$(find turtlebot3_manipulation_gazebo)/launch/turtlebot3_manipulation_controller.launch"/>


  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>



  <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="screen" >
    <rosparam command="load" file="$(find turtlebot3_manipulation_slam)/config/scan_data_filter.yaml" />
  </node>  


  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" value=""/>
  </node>


  <!-- Rosbridge -->
  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>

  <!-- AMCL -->
  <include file="$(find turtlebot3_manipulation_navigation)/launch/amcl.launch">
    <arg name="initial_pose_x"  value="$(arg x_pos)" />
    <arg name="initial_pose_y"  value="$(arg y_pos)" />
    <arg name="initial_pose_a"  value="$(arg z_pos)" />
  </include>


  <!-- move_base -->
  <include file="$(find turtlebot3_manipulation_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>


  <!-- move_group -->
    <include file="$(find turtlebot3_manipulation_moveit_config)/launch/move_group.launch">
    </include>

  <!-- Navigation rviz -->
  <group if="$(arg open_navigation_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_manipulation_navigation)/rviz/turtlebot3_manipulation_navigation.rviz" output="screen"/>
  </group>

  <!-- Manipulator rviz -->
  <group if="$(arg open_manipulator_rviz)">
    <include file="$(find turtlebot3_manipulation_moveit_config)/launch/moveit_rviz.launch">
    </include>
  </group>


  <!-- Manipulator GUI -->
  <group if="$(arg open_manipulator_gui)">
    <include file="$(find turtlebot3_manipulation_gui)/launch/turtlebot3_manipulation_gui.launch">
    </include>
  </group>



</launch>
